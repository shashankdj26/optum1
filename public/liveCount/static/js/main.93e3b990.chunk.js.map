{
  "version": 3,
  "sources": [
    "const/fixed/Types.js",
    "const/Menu/MenuConst.js",
    "const/assets/VideoString.js",
    "const/assets/ImageString.js",
    "data/Lobby/hotspots.js",
    "data/Lobby/realtimeData.js",
    "components/firebase/firebase.js",
    "components/liveCount/LiveCount.js",
    "components/application/Application.js",
    "App.js",
    "reportWebVitals.js",
    "index.js"
  ],
  "names": [
    "HotspotType",
    "TransitionType",
    "HotspotButtonType",
    "menuItems",
    "id",
    "name",
    "class",
    "subMenus",
    "leaderboardPoint",
    "videoRoot",
    "VideoString",
    "LOBBYLOOP",
    "LOOBYTOINFO",
    "LOBBYTOAudi",
    "LOOBYTOPRODUCTSTALL",
    "LOBBYTOBREAKOUT",
    "BREAKOUTLOOP",
    "AUDITORIUM",
    "UIRoot",
    "InfoHotspots",
    "enabled",
    "style",
    "margin",
    "hotspotType",
    "buttonType",
    "link",
    "AudiData",
    "introVideo",
    "placementStyle",
    "TeamsData",
    "description",
    "button",
    "LobbyHotspots",
    "transitionVideo",
    "transitionType",
    "newItem",
    "LOGOR1",
    "assetsImagesFolder",
    "LOGOKOA",
    "LOGO",
    "LOGOLG",
    "LoginScreen",
    "LOGINSCREENSIDELOGO",
    "MENULOGO",
    "ImageRenderedRoot",
    "Infodesk",
    "ProductStall",
    "Breakout",
    "WELCOMEBACKGROUND",
    "RIPPLE",
    "BACKBUTTON",
    "CLOSEBUTTON",
    "BUMPERPRIZEHEADER",
    "PDFLOGO",
    "INFOBUTTON",
    "hotspot",
    "NetworkingLounge",
    "speakerPdf",
    "VideoPlayerData",
    "type",
    "videoCode",
    "firebase",
    "initializeApp",
    "apiKey",
    "authDomain",
    "databaseURL",
    "projectId",
    "storageBucket",
    "messagingSenderId",
    "appId",
    "measurementId",
    "window",
    "firebaseInstance",
    "auth",
    "firestore",
    "realDB",
    "database",
    "analytics",
    "storage",
    "PUSH_CHARS",
    "lastPushTime",
    "lastRandChars",
    "UserState",
    "LiveCount",
    "state",
    "usersData",
    "data",
    "ref",
    "on",
    "query",
    "exists",
    "val",
    "newData",
    "newUserData",
    "Object",
    "keys",
    "forEach",
    "userId",
    "hasOwnProperty",
    "location",
    "push",
    "console",
    "log",
    "setState",
    "this",
    "className",
    "justifyContent",
    "alignItems",
    "fontWeight",
    "fontSize",
    "map",
    "length",
    "background",
    "profile_image",
    "backgroundPosition",
    "backgroundSize",
    "backgroundRepeat",
    "designation",
    "company",
    "email",
    "Component",
    "Application",
    "App",
    "props",
    "userClaims",
    "React",
    "reportWebVitals",
    "onPerfEntry",
    "Function",
    "then",
    "getCLS",
    "getFID",
    "getFCP",
    "getLCP",
    "getTTFB",
    "ReactDOM",
    "render",
    "StrictMode",
    "document",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.93e3b990.chunk.js",
  "sourcesContent": [
    "export const HotspotType =\r\n{\r\n    transition: 'transition',\r\n    iframe: 'iframe',\r\n    video: 'video',\r\n    image: 'image',\r\n    pdf: 'pdf',\r\n    anchor: 'anchor',\r\n    videoPlayer: 'videoPlayer',\r\n    imagePlayer: 'imagePlayer',\r\n    pdfPlayer: 'pdfPlayer',\r\n    inlineVideo: 'inlineVideo',\r\n    chatbot: 'chatbot',\r\n}\r\n\r\nexport const TransitionType =\r\n{\r\n    withInComponent: 0,\r\n    changeComponent: 1,\r\n    changeOverlayComponent: 2,\r\n}\r\n\r\nexport const HotspotButtonType = {\r\n    default: 'default',\r\n    named: 'named'\r\n}\r\n\r\nexport const AnalyticsLocations =\r\n{\r\n    Lobby: 'lobby',\r\n    Audi: 'audi',\r\n    Networking: 'networking',\r\n    Teambuilding: 'teambuilding',\r\n}\r\n\r\nexport const VideoType = {\r\n    youtube: 'youtube',\r\n    vimeo: 'vimeo'\r\n}\r\n\r\n\r\nexport const PointType={\r\n    InfoDesk: 'InfoDesk',\r\n    Photobooth: 'Photobooth',\r\n    TeamBuilding: 'TeamBuilding',\r\n    Audi: 'Audi',\r\n    NetworkingConnect: 'NetworkingConnect',\r\n    NetworkingSession: 'NetworkingSession',\r\n    NetworkingSpeakerProfile: 'NetworkingSpeakerProfile',\r\n    NetworkingChat: 'NetworkingChat',\r\n    Game: 'Game'\r\n}\r\nexport const PointValues = {\r\n    InfoDesk: { value: 50, oneTime: true},\r\n    Photobooth: { value: 20, oneTime: false},\r\n    TeamBuilding: { value: 100, oneTime: true},\r\n    Audi: { value: 20, oneTime: false},\r\n    NetworkingConnect: { value: 20, oneTime: false},\r\n    NetworkingSession: { value: 20, oneTime: false},\r\n    NetworkingSpeakerProfile: { value: 20, oneTime: false},\r\n    NetworkingChat: { value: 20, oneTime: false},\r\n    Game: { value: 20, oneTime: false}\r\n}",
    "import { PointType } from \"../fixed/Types\";\r\n\r\nexport const menuItemsId =\r\n{\r\n    Lobby: 1,\r\n    Audi: 2,\r\n    TeamBuilding: 3,\r\n    Networking: 4,\r\n    MyProfile: 5\r\n}\r\n\r\nexport const menuItemsIndex =\r\n{\r\n    Lobby: 0,\r\n    Audi: 1,\r\n    TeamBuilding: 2,\r\n    Networking: 3,\r\n    MyProfile: 4,\r\n}\r\n\r\nexport const menuItems = [\r\n    {\r\n        id: 1,\r\n        name: 'Lobby',\r\n        class: \"icon-Lobby\",\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Auditorium',\r\n        class: \"icon-Auditorium\",\r\n        subMenus: [\r\n            { id: 1, name: \"Q&A\", class: \"icon-QA\"},\r\n            { id: 2, name: \"Poll\", class: \"icon-Poll\"}\r\n        ],\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Team Building Zone',\r\n        class: \"icon-Teambuidling\",\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Networking Lounge',\r\n        class: \"icon-Networking\",\r\n        subMenus: [\r\n            { id: 1, name: \"Connect\", class: \"icon-Connect\", leaderboardPoint: PointType.NetworkingConnect },\r\n            { id: 2, name: \"Speaker Profile\", class: \"icon-Speaker\", leaderboardPoint: PointType.NetworkingSpeakerProfile},\r\n            { id: 3, name: \"Sessions\", class: \"icon-Sessions\", leaderboardPoint: PointType.NetworkingSession},\r\n            { id: 4, name: \"Chat\", class: \"icon-Chat\", leaderboardPoint: PointType.NetworkingChat},\r\n        ]\r\n    },\r\n    {\r\n        id: 5,\r\n        name: 'Profile',\r\n        class: \"icon-MyProfile\",\r\n    },\r\n];\r\n\r\n\r\nexport const AudisubMenuId = {\r\n    QNA: 1,\r\n    POll: 2\r\n}\r\n\r\nexport const NetworkingSubmenuId = {\r\n    Connect: 1,\r\n    Speaker: 2,\r\n    Sessions: 3,\r\n    Chat: 4,\r\n}",
    "const videoRoot = '/3dAssets/videos/';\r\nexport const VideoString = \r\n{\r\n    LOBBYLOOP: videoRoot + \"Lobby_Loop.mp4\",//\"Lobby_Loop.mp4\",\r\n    LOOBYTOINFO: videoRoot+'ToInfoBooth.mp4',\r\n    LOBBYTOAudi: videoRoot + 'ToAuditorium.mp4',\r\n    LOOBYTOPRODUCTSTALL: videoRoot +'ToProductStall.mp4',\r\n    LOBBYTOBREAKOUT: videoRoot + 'breakout.mp4',\r\n    BREAKOUTLOOP: videoRoot+'breakoutLoop.mp4',\r\n    AUDITORIUM: videoRoot + 'Auditorium.mp4',\r\n}",
    "const ImageRenderedRoot = '/3dAssets/images/';\r\nconst UIRoot = '/3dAssets/UI/';\r\nconst assetsImagesFolder = '/assets/images/'\r\n\r\nexport const ImageString =\r\n{\r\n    LOGOR1:assetsImagesFolder+'R1Logo.png',\r\n    LOGOKOA: assetsImagesFolder+'koaLogo.png',\r\n    \r\n    LOGO: assetsImagesFolder +'logo.png',\r\n    LOGOLG: assetsImagesFolder +'logo-lg.png',\r\n    LoginScreen: assetsImagesFolder + 'login/Login.jpg',\r\n    LOGINSCREENSIDELOGO: assetsImagesFolder +'logo.png',\r\n    MENULOGO: assetsImagesFolder + 'logo.png',\r\n\r\n    LOBBYLOOP: ImageRenderedRoot+'Lobby.jpg',\r\n    Infodesk: ImageRenderedRoot+'Info.jpg',\r\n    ProductStall: ImageRenderedRoot + 'Product-Stall.jpg',\r\n    Breakout: ImageRenderedRoot+'breakout.jpg',\r\n\r\n    WELCOMEBACKGROUND: 'assets/images/bg/all-stages.jpg',\r\n\r\n    RIPPLE: '/3dAssets/gifs/Ripple-2.4s-128px.svg',\r\n    //UI\r\n    BACKBUTTON: UIRoot + 'backButton.png',\r\n    CLOSEBUTTON: UIRoot + 'closeButton.png',\r\n    BUMPERPRIZEHEADER: 'assets/images/banner-header.jpg',\r\n    PDFLOGO: UIRoot + 'pdfIcon.png',\r\n    INFOBUTTON: UIRoot+'info/information.png',\r\n\r\n}\r\n",
    "import { menuItems, menuItemsIndex } from \"../../const/Menu/MenuConst\"\r\nimport { VideoString } from \"../../const/assets/VideoString\"\r\nimport { TransitionType, HotspotType, HotspotButtonType, PointType } from \"../../const/fixed/Types\"\r\nimport { ImageString } from \"../../const/assets/ImageString\"\r\n\r\nexport let InfoHotspots = {\r\n    'pdf-1': {\r\n        id: 'Agenda',\r\n        enabled: true,\r\n        name: 'Agenda',\r\n        style: {\r\n            margin: '-6% -10.8%',\r\n        },\r\n        hotspotType: HotspotType.pdf,\r\n        buttonType: HotspotButtonType.named,\r\n        link: \"/web/viewer.html?file=%2Fassets%2Fcontent%2FAgenda.pdf\",\r\n    },\r\n    'helpdesk': {\r\n        id: 'HelpdeskChat',\r\n        enabled: true,\r\n        name: 'Helpdesk',\r\n        style: {\r\n            margin: '-6% 6.5%',\r\n        },\r\n        hotspotType: HotspotType.chatbot,\r\n        buttonType: HotspotButtonType.named,\r\n    },\r\n}\r\n\r\nexport let AudiData = {\r\n    introVideo: VideoString.AUDITORIUM,\r\n    link: 'https://vimeo.com/event/473964',\r\n    placementStyle: { \"margin\": \"12.8% 34%\", \"width\": \"31%\", \"height\": \"40.6%\" }\r\n}\r\n\r\nexport let TeamsData = {\r\n    \"pdf-1\":{\r\n        id: 'pdf=1',\r\n        name: 'ABOUT THE ACTIVITY',\r\n        description: '',\r\n        link: '/assets/content/TeamBuildingInfo.pdf',\r\n        button: 'READ MORE'\r\n    },\r\n    \"link1\": {\r\n        id: 'link1',\r\n        name: 'Team Leadership',\r\n        description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry',\r\n        link: 'https://teams.microsoft.com/l/meetup-join/19%3ameeting_ODFmOTI3MTUtZTFmNy00NTgwLWExMzItOTI2MzkyNmFmYTlk%40thread.v2/0?context=%7b%22Tid%22%3a%2225c1df4b-00ea-4e39-98bd-5f1143c5c5df%22%2c%22Oid%22%3a%22abcb8352-f7bf-475a-82d7-cb6c48c7d70f%22%7d'\r\n    },\r\n    \"link2\": {\r\n        id: 'link2',\r\n        name: 'Team Mindset',\r\n        description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry',\r\n        link: 'https://www.r1rcm.com/'\r\n    },\r\n    \"link3\": {\r\n        id: 'link3',\r\n        name: 'Team Values',\r\n        description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry',\r\n        link: 'https://www.r1rcm.com/'\r\n    },\r\n    \"link4\": {\r\n        id: 'link4',\r\n        name: 'Team Rising',\r\n        description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry',\r\n        link: 'https://www.r1rcm.com/'\r\n    },\r\n    \"link5\": {\r\n        id: 'link5',\r\n        name: 'Team Leadership',\r\n        description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry',\r\n        link: 'https://www.r1rcm.com/'\r\n    },\r\n    \"link6\": {\r\n        id: 'link6',\r\n        name: 'Team Mindset',\r\n        description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry',\r\n        link: 'https://www.r1rcm.com/'\r\n    },\r\n    \"link7\": {\r\n        id: 'link7',\r\n        name: 'Team Values',\r\n        description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry',\r\n        link: 'https://www.r1rcm.com/'\r\n    },\r\n    \"link8\": {\r\n        id: 'link8',\r\n        name: 'Team Rising',\r\n        description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry',\r\n        link: 'https://www.r1rcm.com/'\r\n    },\r\n    \"link9\": {\r\n        id: 'link9',\r\n        name: 'Team Values',\r\n        description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry',\r\n        link: 'https://www.r1rcm.com/'\r\n    },\r\n    \"link10\": {\r\n        id: 'link10',\r\n        name: 'Team Rising',\r\n        description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry',\r\n        link: 'https://www.r1rcm.com/'\r\n    },\r\n}\r\n// /web/viewer.html?file=%2F\r\nexport let LobbyHotspots =\r\n{\r\n    'PhotoBooth': {\r\n        id:'PhotoBooth',\r\n        enabled: true,\r\n        style: {\r\n            margin: '-5% -45.5%',\r\n        },\r\n        hotspotType: HotspotType.iframe,\r\n        link: '/photobooth/index.html',\r\n        leaderboardPoint: PointType.Photobooth,\r\n    },\r\n    'TeamBuilding': {\r\n        id: 'TeamBuilding',\r\n        enabled: true,\r\n        style: {\r\n            margin: '-5.5% -31%',\r\n        },\r\n        hotspotType: HotspotType.transition,\r\n        transitionVideo: null,\r\n        transitionType: TransitionType.changeOverlayComponent,\r\n        newItem: menuItems[menuItemsIndex.TeamBuilding],\r\n    },\r\n    'Audi': {\r\n        id: 'Audi',\r\n        enabled: true,\r\n        style: {\r\n            margin: '-5.5% -4%',\r\n        },\r\n        hotspotType: HotspotType.transition,\r\n        transitionVideo: VideoString.LOBBYTOAudi,\r\n        transitionType: TransitionType.changeComponent,\r\n        newItem: menuItems[menuItemsIndex.Audi],\r\n    },\r\n    'Networking': {\r\n        id: 'Networking',\r\n        enabled: true,\r\n        style: {\r\n            margin: '-5.5% 23.5%',\r\n        },\r\n        hotspotType: HotspotType.transition,\r\n        transitionVideo: VideoString.LOBBYTOBREAKOUT,\r\n        transitionType: TransitionType.changeComponent,\r\n        newItem: menuItems[menuItemsIndex.Networking]\r\n    },\r\n    'Product': {\r\n        id: 'Game',\r\n        enabled: true,\r\n        style: {\r\n            margin: '-6% 39.5%',\r\n        },\r\n        hotspotType: HotspotType.iframe,\r\n        link: '/game/index.html',\r\n        leaderboardPoint: PointType.Game,\r\n    },\r\n    'Infodesk': {\r\n        id:'Infodesk',\r\n        enabled: true,\r\n        style: {\r\n            margin: '6% -3.5%',\r\n        },\r\n        hotspotType: HotspotType.transition,\r\n        transitionVideo: VideoString.LOOBYTOINFO,\r\n        transitionType: TransitionType.withInComponent,\r\n        newItem: ImageString.Infodesk,\r\n        hotspot: InfoHotspots,\r\n        name: 'Infodesk',\r\n        leaderboardPoint: PointType.InfoDesk,\r\n    }\r\n}\r\n\r\nexport let NetworkingLounge ={\r\n    speakerPdf: '/web/viewer.html?file=%2Fassets%2Fcontent%2FSpeakers.pdf'\r\n}\r\n",
    "import { VideoType } from \"../../const/fixed/Types\";\r\n\r\nexport const VideoPlayerData = {\r\n    'Holding': {\r\n        enabled: true,\r\n        type: VideoType.youtube,\r\n        id: 'Holding',\r\n        link: 'https://youtu.be/VoeUTFTXrOk',\r\n        name: 'ComingSoon',\r\n        videoCode: 'VoeUTFTXrOk',\r\n        description: ''\r\n    },\r\n    'Video1':{\r\n        enabled: false,\r\n        type: VideoType.vimeo,\r\n        id: 'Video1',\r\n        link: 'https://vimeo.com/334905384',\r\n        name: 'Neymar',\r\n        videoCode: '781333669',\r\n        description: `All content is copy right of R1RCM, strictly non-shareable on any medium. We would request all participants to support the same.\r\n        In case you need any Get Connected related content reach out to R1 India's communication team.`\r\n    }\r\n}\r\n",
    "import firebase, { apps, database } from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/database\";\r\nimport \"firebase/analytics\";\r\nimport \"firebase/storage\";\r\nimport { AppString } from \"./AppString\";\r\nimport * as projectData from '../../data/Lobby/hotspots';\r\nimport * as realTimeData from '../../data/Lobby/realtimeData';\r\nimport { PointType, PointValues } from \"../../const/fixed/Types\";\r\nimport { object } from \"prop-types\";\r\n\r\n\r\nlet firebaseConfig = {\r\n    apiKey: \"AIzaSyDzGNeI8hwj5UZNVcUaD4yfMVK35yvj0X8\",\r\n    authDomain: \"ht-virutalevent.firebaseapp.com\",\r\n    databaseURL: \"https://ht-virutalevent-default-rtdb.firebaseio.com\",\r\n    projectId: \"ht-virutalevent\",\r\n    storageBucket: \"ht-virutalevent.appspot.com\",\r\n    messagingSenderId: \"306628308360\",\r\n    appId: \"1:306628308360:web:6a285b18ec9e784c715e3d\",\r\n    measurementId: \"G-59S3S9W3E2\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nwindow.firebaseInstance = firebase;\r\n\r\nexport const firebaseApp = firebase;\r\n\r\nexport const auth = firebase.auth();\r\n\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const realDB = firebase.database();\r\n\r\nexport const analytics = firebase.analytics();\r\n\r\nexport const storage = firebase.storage();\r\n\r\n\r\n\r\nexport const signInWithId = (email, password) => {\r\n    return new Promise(async (res, rej) => {\r\n        try {\r\n            const cred = await auth.signInWithEmailAndPassword(email, password)\r\n            console.log(cred.user.email + \" is logged in right now\");\r\n            res();\r\n        } catch (error) {\r\n            rej(error);\r\n        }\r\n    })\r\n}\r\nconst defaultImageUrl = \"https://firebasestorage.googleapis.com/v0/b/djfarmademo.appspot.com/o/profileimages%2Fblank-avatar.png?alt=media&token=2af15226-9bd7-47ce-bc72-f3c1a12a0780\";\r\n\r\nexport const signUpWithId = (email, password, name, url) => {\r\n    return new Promise(async (res, rej) => {\r\n        try {\r\n            const response = await auth.createUserWithEmailAndPassword(email, password);\r\n            console.log(response.user.email + \" is signedUp in right now\");\r\n            await response.user.updateProfile({\r\n                displayName: name,\r\n                photoURL: url ? url : defaultImageUrl,\r\n            })\r\n            res();\r\n        } catch (error) {\r\n            rej(error);\r\n        }\r\n    })\r\n}\r\n\r\nexport const loadUser = async (email, password, forceCreateNew = false) => {\r\n    return new Promise(async (res, rej) => {\r\n        try {\r\n            await signInWithId(email, password)\r\n            res();\r\n        } catch (err) {\r\n            if (err.code === \"auth/user-not-found\" && forceCreateNew) {\r\n                try {\r\n                    window.userData = await getUserDetails(email);\r\n                    await signUpWithId(email, password, window.userData.name, window.userData.profile_image)\r\n                    await turnOnUserCard(email)\r\n                    return;\r\n                } catch (error) {\r\n                    if (error.code === \"NoUserFound\") {\r\n                        rej(error);\r\n                    }\r\n                }\r\n            }\r\n            rej({\r\n                code: err.code,\r\n                message: err.message\r\n            });\r\n        }\r\n    })\r\n}\r\nexport const signOut = (noRefresh) => {\r\n    auth.signOut().then(function () {\r\n        // window.open(\"https://\" + document.domain, \"_self\");\r\n        if (!noRefresh) {\r\n            window.location.reload();\r\n            window.location.href = \"/\";\r\n        }\r\n    });\r\n};\r\n\r\nasync function asyncForEach(array, callback) {\r\n    for (let index = 0; index < array.length; index++) {\r\n        await callback(array[index], index, array);\r\n    }\r\n}\r\n\r\nexport const generatePushID = (function () {\r\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\r\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n\r\n    // Timestamp of last push, used to prevent local collisions if you push twice in one ms.\r\n    var lastPushTime = 0;\r\n\r\n    // We generate 72-bits of randomness which get turned into 12 characters and appended to the\r\n    // timestamp to prevent collisions with other clients.  We store the last characters we\r\n    // generated because in the event of a collision, we'll use those same characters except\r\n    // \"incremented\" by one.\r\n    var lastRandChars = [];\r\n\r\n    return function () {\r\n        var now = new Date().getTime();\r\n        var duplicateTime = (now === lastPushTime);\r\n        lastPushTime = now;\r\n\r\n        var timeStampChars = new Array(8);\r\n        for (var i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        if (now !== 0) throw new Error('We should have converted the entire timestamp.');\r\n\r\n        var id = timeStampChars.join('');\r\n\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        } else {\r\n            // If the timestamp hasn't changed since last push, use the same random number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        if (id.length != 20) throw new Error('Length should be 20.');\r\n\r\n        return id;\r\n    };\r\n})();\r\n\r\nexport const youtube_parser = (url) => {\r\n    var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/;\r\n    var match = url.match(regExp);\r\n    return (match && match[7].length == 11) ? match[7] : false;\r\n}\r\n\r\n// R1Rcm\r\nexport const getUserDetails = (email) => {\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            let path = '/users'\r\n            var dbref = realDB.ref(path).orderByChild('email').equalTo(email);\r\n            // var dbref = realDB.ref(path).orderByChild('email').startAt(email.toUpperCase()).endAt(email.toLowerCase()+'\\uf8ff');\r\n            const query = await dbref.once(\"value\")\r\n            if (query.exists()) {\r\n                let key = Object.keys(query.val())[0]\r\n                resolve(query.val()[key])\r\n            } else {\r\n                reject({\r\n                    code: \"NoUserFound\",\r\n                    message: \"No Such User Is Registered\"\r\n                })\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n            reject(err)\r\n        }\r\n    })\r\n}\r\n\r\nexport const getProjectRealTimeData = () => {\r\n    return new Promise(async (res, rej) => {\r\n        try {\r\n            const doc = await firestore.collection(AppString.BACKSATGE).doc(AppString.BACKSTAGEREALTIMEDATA).get();\r\n            if (!doc.exists) {\r\n                rej({\r\n                    code: \"NoDataFound\",\r\n                    message: \"no such document exists.\"\r\n                })\r\n            }\r\n            const docData = doc.data();\r\n            Object.keys(docData).forEach(key => {\r\n                let ItemObject = docData[key]\r\n                Object.keys(ItemObject).forEach(itmeKey => {\r\n                    if (realTimeData[`${key}`].hasOwnProperty(itmeKey)) {\r\n                        if (typeof (realTimeData[`${key}`][itmeKey]) !== 'object') {\r\n                            realTimeData[`${key}`][itmeKey] = ItemObject[itmeKey];\r\n                        } else {\r\n                            realTimeData[`${key}`][itmeKey] = {\r\n                                ...realTimeData[`${key}`][itmeKey],\r\n                                ...ItemObject[itmeKey]\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (typeof (ItemObject[itmeKey]) !== 'object') {\r\n                            realTimeData[`${key}`][itmeKey] = ItemObject[itmeKey]\r\n                        } else {\r\n                            realTimeData[`${key}`][itmeKey] = {\r\n                                ...ItemObject[itmeKey]\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n            res(docData);\r\n        } catch (error) {\r\n            rej(error)\r\n        }\r\n    })\r\n}\r\n\r\nexport const getProjectData = () => {\r\n    return new Promise(async (res, rej) => {\r\n        try {\r\n            const doc = await firestore.collection(AppString.BACKSATGE).doc(AppString.BACKSTAGELINK).get();\r\n            if (!doc.exists) {\r\n                rej({\r\n                    code: \"NoDataFound\",\r\n                    message: \"no such document exists.\"\r\n                })\r\n            }\r\n            console.log(projectData);\r\n            const docData = doc.data();\r\n            Object.keys(docData).forEach(key => {\r\n                let ItemObject = docData[key]\r\n                Object.keys(ItemObject).forEach(itmeKey => {\r\n                    if (projectData[`${key}`].hasOwnProperty(itmeKey)) {\r\n                        if (typeof (projectData[`${key}`][itmeKey]) !== 'object') {\r\n                            projectData[`${key}`][itmeKey] = ItemObject[itmeKey];\r\n                        } else {\r\n                            projectData[`${key}`][itmeKey] = {\r\n                                ...projectData[`${key}`][itmeKey],\r\n                                ...ItemObject[itmeKey]\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (typeof (ItemObject[itmeKey]) !== 'object') {\r\n                            projectData[`${key}`][itmeKey] = ItemObject[itmeKey]\r\n                        } else {\r\n                            projectData[`${key}`][itmeKey] = {\r\n                                ...ItemObject[itmeKey]\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n            console.log(projectData);\r\n            res();\r\n        } catch (error) {\r\n            rej(error)\r\n        }\r\n    })\r\n}\r\n\r\nexport const turnOnUserCard = (email) => {\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            let path = '/users'\r\n            var dbref = realDB.ref(path).orderByChild('email').equalTo(email).limitToFirst(1);\r\n            // var dbref = realDB.ref(path).orderByChild('email').startAt(email.toUpperCase()).endAt(email.toLowerCase()+'\\uf8ff').limitToFirst(1);\r\n            const query = await dbref.once(\"value\")\r\n            if (query.exists()) {\r\n                let key = Object.keys(query.val())[0]\r\n                console.log(query.val()[key])\r\n                if (!query.val()[key].enabled) {\r\n                    realDB.ref(`/users/${key}`).update({\r\n                        enabled: true\r\n                    })\r\n                }\r\n                resolve();\r\n            } else {\r\n                reject({\r\n                    code: \"NoCardUserFound\",\r\n                    message: \"No Such User Is Registered\"\r\n                })\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n            reject(err)\r\n        }\r\n    })\r\n}\r\n\r\nexport const attachConnectProfilesListener = (callback) => {\r\n    let path = '/users'\r\n    window.dbref = realDB.ref(path).orderByChild('enabled').equalTo(true);\r\n    window.connectListener = window.dbref.on(\"value\", (query) => {\r\n        if (query.exists()) {\r\n            callback(false, query.val());\r\n        } else {\r\n            callback(true, { code: \"NoUserFound\", message: \"NoUserIsFoundForConnect\" })\r\n        }\r\n    }, err => { callback(true, err) })\r\n}\r\n\r\nexport const removeConnectProfilesListener = () => {\r\n    window.dbref.off(\"value\", window.connectListener);\r\n}\r\n\r\n\r\n//#region Login analytics\r\nlet diconnectReference = null;\r\nexport const addLoginAnalytics = (user) => {\r\n    return new Promise(async (res, rej) => {\r\n        try {\r\n            if (user.displayName === null) {\r\n                setTimeout(() => {\r\n                    addLoginAnalytics(user)\r\n                }, 1000)\r\n                return;\r\n            }\r\n            if (window.todaysDateTimestamp === undefined || window.todaysDateTimestamp === null) {\r\n                setTimeout(() => {\r\n                    addLoginAnalytics(user)\r\n                }, 1000)\r\n                return;\r\n            }\r\n            let Id = user.email;\r\n            Id = Id.replace(/[&\\/\\\\#,+$~%.'\":*?<>{}]/g, '');\r\n            Id = Id.toLowerCase();\r\n\r\n            let path = `analytics/${window.todaysDateTimestamp}/${Id}`;\r\n            const reference = realDB.ref(path);\r\n            const snapShot = await reference.once('value')\r\n            if (snapShot.exists()) {\r\n                if (snapShot.val().email === undefined || snapShot.val().email === null || snapShot.val().name === undefined || snapShot.val().name === null) {\r\n                    await reference.update({\r\n                        email: user.email,\r\n                        name: user.displayName,\r\n                        lastLoginTime: firebase.database.ServerValue.TIMESTAMP,\r\n                    })\r\n                } else {\r\n                    await reference.update({\r\n                        lastLoginTime: firebase.database.ServerValue.TIMESTAMP\r\n                    })\r\n                }\r\n            } else {\r\n                await reference.set({\r\n                    email: user.email,\r\n                    name: user.displayName,\r\n                    firstLoginTime: firebase.database.ServerValue.TIMESTAMP,\r\n                    lastLoginTime: firebase.database.ServerValue.TIMESTAMP,\r\n                })\r\n            }\r\n            res();\r\n        } catch (error) {\r\n            rej(error);\r\n        }\r\n    })\r\n}\r\n\r\nexport const addDisconnectListener = (user) => {\r\n    return new Promise(async (res, rej) => {\r\n        try {\r\n            if (user.displayName === null) {\r\n                setTimeout(() => {\r\n                    addLoginAnalytics(user)\r\n                }, 1000)\r\n                return;\r\n            }\r\n            if (window.todaysDateTimestamp === undefined || window.todaysDateTimestamp === null) {\r\n                setTimeout(() => {\r\n                    addLoginAnalytics(user)\r\n                }, 1000)\r\n                return;\r\n            }\r\n            let Id = user.email;\r\n            Id = Id.replace(/[&\\/\\\\#,+$~%.'\":*?<>{}]/g, '');\r\n            Id = Id.toLowerCase();\r\n            let path = `analytics/${window.todaysDateTimestamp}/${Id}`;\r\n            const reference = realDB.ref(path);\r\n            diconnectReference = reference.onDisconnect()\r\n            diconnectReference.update({\r\n                lastLogoutTime: firebase.database.ServerValue.TIMESTAMP\r\n            }).then(function () {\r\n                console.log(\"listnerAttached\")\r\n            });\r\n            res();\r\n        } catch (error) {\r\n            rej(error);\r\n        }\r\n    })\r\n}\r\n\r\nexport const addLogoutAnalytics = (user) => {\r\n    return new Promise(async (res, rej) => {\r\n        try {\r\n            if (user.displayName === null) {\r\n                setTimeout(() => {\r\n                    addLoginAnalytics(user)\r\n                }, 1000)\r\n                return;\r\n            }\r\n            if (window.todaysDateTimestamp === undefined || window.todaysDateTimestamp === null) {\r\n                setTimeout(() => {\r\n                    addLoginAnalytics(user)\r\n                }, 1000)\r\n                return;\r\n            }\r\n            let Id = user.email;\r\n            Id = Id.replace(/[&\\/\\\\#,+$~%.'\":*?<>{}]/g, '');\r\n            Id = Id.toLowerCase();\r\n            let path = `analytics/${window.todaysDateTimestamp}/${Id}`;\r\n            const reference = realDB.ref(path);\r\n            await reference.update({\r\n                lastLogoutTime: firebase.database.ServerValue.TIMESTAMP\r\n            })\r\n            if (diconnectReference) {\r\n                diconnectReference.cancel();\r\n            }\r\n            res();\r\n        } catch (error) {\r\n            rej(error);\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const updateUserStatus = (userId) => {\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            if (userId == undefined) {\r\n                reject({\r\n                    code: \"UserIDWasNull\",\r\n                    message: \"Please try again later\"\r\n                });\r\n            } else {\r\n                if (userId === \"\") {\r\n                    reject({\r\n                        code: \"UserIDWasNull\",\r\n                        message: \"Please try again later\"\r\n                    });\r\n                }\r\n            }\r\n            var userCheck = realDB.ref('loggedInUser/' + userId)\r\n            await userCheck.update({\r\n                state: 'online',\r\n                lastChange: firebase.database.ServerValue.TIMESTAMP,\r\n            })\r\n            let disconnectRef = await userCheck.onDisconnect()\r\n            await disconnectRef.update({\r\n                state: 'offline',\r\n                lastChange: firebase.database.ServerValue.TIMESTAMP\r\n            })\r\n            resolve();\r\n        } catch (error) {\r\n            reject(error);\r\n        }\r\n    })\r\n}\r\n\r\n\r\n//#endregion\r\n\r\n//#region Analytics\r\nexport const updateUserLocation = (userId, location, skipInc = false) => {\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            if (userId == undefined) {\r\n                reject({\r\n                    code: \"UserIDWasNull\",\r\n                    message: \"Please try again later\"\r\n                });\r\n            } else {\r\n                if (userId === \"\") {\r\n                    reject({\r\n                        code: \"UserIDWasNull\",\r\n                        message: \"Please try again later\"\r\n                    });\r\n                }\r\n            }\r\n            var userCheck = realDB.ref('loggedInUser/' + userId)\r\n            await userCheck.update({\r\n                location: location\r\n            })\r\n            if (skipInc) {\r\n                var userCheck = realDB.ref('locationCounter/')\r\n                await userCheck.update({\r\n                    [location]: firebase.database.ServerValue.increment(1)\r\n                })\r\n                window.locationDBRef = await userCheck.onDisconnect()\r\n                await window.locationDBRef.update({\r\n                    [location]: firebase.database.ServerValue.increment(-1)\r\n                })\r\n            }\r\n\r\n            resolve();\r\n        } catch (error) {\r\n            reject(error);\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const decreaseLocationCount = (userId, location) => {\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            if (window.locationDBRef) {\r\n                window.locationDBRef.cancel();\r\n            }\r\n            var userCheck = realDB.ref('locationCounter/')\r\n            await userCheck.update({\r\n                [location]: firebase.database.ServerValue.increment(-1)\r\n            })\r\n            resolve()\r\n        } catch (error) {\r\n            reject(error)\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const addRealtimeHotspotAnalytics = (user, hotspotName) => {\r\n    return new Promise(async (res, rej) => {\r\n        try {\r\n            if (!window.todaysDateTimestamp && !user.email && !user.displayName) {\r\n                setTimeout(() => {\r\n                    addLoginAnalytics(user)\r\n                }, 500)\r\n                return;\r\n            }\r\n            if (window.todaysDateTimestamp === undefined || window.todaysDateTimestamp === null) {\r\n                setTimeout(() => {\r\n                    addLoginAnalytics(user)\r\n                }, 500)\r\n                return;\r\n            }\r\n            let Id = user.email;\r\n            Id = Id.replace(/[&\\/\\\\#,+$~%.'\":*?<>{}]/g, '');\r\n            Id = Id.toLowerCase();\r\n            let path = `analytics/${window.todaysDateTimestamp}/${Id}`;\r\n            const reference = realDB.ref(path);\r\n            await reference.update({\r\n                [hotspotName]: firebase.database.ServerValue.increment(1)\r\n            })\r\n            res();\r\n        } catch (error) {\r\n            rej(error);\r\n        }\r\n    })\r\n}\r\n\r\n//#endregion\r\n\r\n//#region leaderBoard\r\nexport const addScore = (user, pointName) => {\r\n    return new Promise(async (res, rej) => {\r\n        try {\r\n            let Id = user.email;\r\n            Id = Id.replace(/[&\\/\\\\#,+$~%.'\":*?<>{}]/g, '');\r\n            Id = Id.toLowerCase();\r\n\r\n            let userScorePath = '/usersScore/' + Id;\r\n            let leaderboradPath = '/leaderboard/' + Id;\r\n\r\n            const userScoreRef = realDB.ref(userScorePath);\r\n            const leaderboardScoreRef = realDB.ref(leaderboradPath);\r\n            const userSocreSnapShot = await userScoreRef.once('value');\r\n            if (userSocreSnapShot.exists()) {\r\n                //seconf time\r\n                let scoreData = userSocreSnapShot.val()\r\n                console.log(scoreData);\r\n                if (scoreData.hasOwnProperty(pointName)) {\r\n                    scoreData[pointName] += 1\r\n                } else {\r\n                    scoreData[pointName] = 1\r\n                }\r\n                if (scoreData.score)\r\n                    delete scoreData.score\r\n                let finalScore = getScore(scoreData)\r\n                console.log(scoreData)\r\n                console.log(finalScore)\r\n                await userScoreRef.update({\r\n                    ...scoreData,\r\n                    score: finalScore\r\n                })\r\n                await leaderboardScoreRef.update({\r\n                    name: user.displayName,\r\n                    email: user.email,\r\n                    score: finalScore\r\n                })\r\n            }\r\n            else {\r\n                let scoreData = {\r\n                    [`${pointName}`]: 1\r\n                }\r\n                let finalScore = getScore(scoreData)\r\n                await userScoreRef.set({\r\n                    [`${pointName}`]: 1,\r\n                    score: finalScore\r\n                })\r\n                await leaderboardScoreRef.set({\r\n                    name: user.displayName,\r\n                    email: user.email,\r\n                    score: finalScore\r\n                })\r\n            }\r\n            res();\r\n        } catch (error) {\r\n            rej(error);\r\n        }\r\n    })\r\n}\r\nexport const getUserScore = (user) => {\r\n    return new Promise(async (res, rej) => {\r\n        try {\r\n            let Id = user.email;\r\n            Id = Id.replace(/[&\\/\\\\#,+$~%.'\":*?<>{}]/g, '');\r\n            Id = Id.toLowerCase();\r\n            let leaderboradPath = '/leaderboard/' + Id;\r\n            const ref = realDB.ref(leaderboradPath)\r\n            const snapshot = await ref.once('value')\r\n            if (snapshot.exists()) {\r\n                res(snapshot.val().score)\r\n            } else {\r\n                res(0)\r\n            }\r\n        } catch (error) {\r\n            rej(error)\r\n        }\r\n    })\r\n}\r\nconst getScore = (data) => {\r\n    let finalScore = 0;\r\n    Object.keys(data).forEach(key => {\r\n        if (!PointValues[key].oneTime) {\r\n            finalScore += data[key] * PointValues[key].value;\r\n            console.log(key, data[key], PointValues[key].value, finalScore)\r\n        } else {\r\n            finalScore += PointValues[key].value;\r\n            console.log(key, 1, PointValues[key].value, finalScore)\r\n        }\r\n    })\r\n    return finalScore;\r\n}\r\nconst reverseObject = (object) => {\r\n    var newObject = {};\r\n    var keys = [];\r\n    for (var key in object) {\r\n        keys.push(key);\r\n    }\r\n    for (var i = keys.length - 1; i >= 0; i--) {\r\n        var value = object[keys[i]];\r\n        newObject[keys[i]] = value;\r\n    }\r\n    return newObject;\r\n}\r\nexport const getLeaderboard = (callback) => {\r\n    realDB.ref().child(\"leaderboard\").orderByChild('score').limitToLast(10).on(\"value\", function (snapshot) {\r\n        if (snapshot.exists()) {\r\n            let arr = []\r\n            snapshot.forEach(function (child) {\r\n                arr.push(child.val())\r\n            });\r\n            arr = arr.reverse();\r\n            callback(false, arr)\r\n        }\r\n        else {\r\n            callback({\r\n                code: 'noUserFound', message: 'noUserFound'\r\n            })\r\n        }\r\n    }, function (errorObject) {\r\n        callback(errorObject)\r\n    });\r\n\r\n    // let path = '/leaderboard'\r\n    // window.leaderboardListener = realDB.ref(path).orderByChild('score')//.limitToLast(10);\r\n    // window.leaderboardListener.on('value', (snapShot) => {\r\n    //     if (!snapShot.exists()) {\r\n    //         callback({\r\n    //             code: 'noUserFound', message: 'noUserFound'\r\n    //         })\r\n    //         return;\r\n    //     }\r\n    //     var data = snapShot.val();\r\n    //     const sortedData = reverseObject({...data}) \r\n    //     console.log(data)\r\n    //     console.log(sortedData)\r\n    //     callback(false, sortedData);\r\n    // }, err => {\r\n    //     console.log(err)\r\n    //     callback(err);\r\n    // })\r\n}\r\nexport const removeLeaderboardListener = () => {\r\n    if (window.leaderboardListener)\r\n        window.leaderboardListener.off()\r\n}\r\n\r\nexport const getUserRank = (user) => {\r\n    return new Promise(async (res, rej) => {\r\n        try {\r\n            let Id = user.email;\r\n            Id = Id.replace(/[&\\/\\\\#,+$~%.'\":*?<>{}]/g, '');\r\n            Id = Id.toLowerCase();\r\n            let leaderboradPath = '/leaderboard/';\r\n            const ref = realDB.ref(leaderboradPath).orderByChild('score')\r\n            const snapshot = await ref.once('value')\r\n            if (snapshot.exists()) {\r\n                let data = snapshot.val();\r\n                let leaderboardKeys = Object.keys(data)\r\n                let maxCount = leaderboardKeys.length;\r\n                let index = leaderboardKeys.indexOf(Id)\r\n                // console.log(index, maxCount)\r\n                if (index !== -1) {\r\n                    res(maxCount - index)\r\n                } else {\r\n                    res(maxCount + 1)\r\n                }\r\n            } else {\r\n                res(0)\r\n            }\r\n        } catch (error) {\r\n            rej(error)\r\n        }\r\n\r\n    })\r\n}\r\n//#endregion",
    "import React, { Component } from \"react\";\r\nimport { realDB } from \"../firebase/firebase\";\r\nimport './LiveCount.css'\r\n\r\nconst UserState = {\r\n    online: 'online',\r\n    offline: 'offline'\r\n}\r\n\r\nclass LiveCount extends Component {\r\n    state = {\r\n        usersData: null,\r\n        data: null,\r\n    }\r\n\r\n    componentDidMount() {\r\n        realDB.ref('loggedInUser').on('value', (query) => {\r\n            if (query.exists()) {\r\n                const data = query.val();\r\n                let newData = {};\r\n                let newUserData = {};\r\n\r\n                Object.keys(data).forEach(userId => {\r\n                    if (data[userId].state === UserState.online) {\r\n                        if (newData.hasOwnProperty(data[userId].location)) {\r\n                            newData[data[userId].location].push(userId)\r\n                        } else {\r\n                            newData = {\r\n                                ...newData,\r\n                                [data[userId].location]: [userId]\r\n                            }\r\n                        }\r\n\r\n                        newUserData = {\r\n                            ...newUserData,\r\n                            [userId]: data[userId]\r\n                        }\r\n                    }\r\n                })\r\n                console.log(newUserData)\r\n                console.log(newData)\r\n                this.setState({\r\n                    usersData: newUserData,\r\n                    data: newData,\r\n                })\r\n\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const { data, usersData } = this.state;\r\n        return (\r\n            <>\r\n\r\n                {\r\n                    !data &&\r\n                    <>\r\n                        <div className=\"LiveCountContainerParent\">\r\n                            <div className=\"LiveCountContainer\" style={{\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                                fontWeight: 'bold',\r\n                                fontSize: '1.5rem'\r\n                            }}>\r\n                                Loading....\r\n                        </div>\r\n                        </div>\r\n                    </>\r\n                }\r\n                {\r\n                    data &&\r\n                    <>\r\n                        <div className=\"LiveCountContainerParent\">\r\n                            <div className=\"LiveCountContainerHeader\">\r\n                                LiveCount\r\n                            </div>\r\n                            <div className=\"LiveCountContainer\">\r\n                                {\r\n                                    Object.keys(data).map(location => (\r\n                                        <div className=\"locationContainer\">\r\n                                            <h2>\r\n                                                {location}: {data[location].length}\r\n                                            </h2>\r\n                                            <div className=\"locationUserContainer\">\r\n                                                {\r\n                                                    data[location].map(userId => (\r\n                                                        <div className=\"connect-card\" >\r\n                                                            <div className=\"connect-card-head\">\r\n                                                                <div className=\"connect-card-head-image\" style={{\r\n                                                                    background: `url(${usersData[userId].profile_image})`,// profile_image\r\n                                                                    backgroundPosition: 'center',\r\n                                                                    backgroundSize: 'contain',\r\n                                                                    backgroundRepeat: 'no-repeat'\r\n                                                                }}></div>\r\n                                                                <div className=\"connect-card-head-details\">\r\n                                                                    <div className=\"connect-card-name\">{usersData[userId].name}</div>\r\n                                                                    <div className=\"connect-card-title\">{`${usersData[userId].designation}, ${usersData[userId].company}`}</div>\r\n                                                                    <div className=\"connect-card-email\">{usersData[userId].email}</div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    ))\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default LiveCount;\r\n",
    "import React, { Component } from \"react\";\r\nimport LiveCount from \"../liveCount/LiveCount\";\r\n\r\nclass Application extends Component {\r\n    render() {\r\n        return (\r\n            <LiveCount></LiveCount>\r\n        )\r\n    }\r\n}\r\nexport default Application;\r\n",
    "import React from 'react';\nimport Application from \"./components/application/Application\";\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.userClaims = null;\n  }\n\n  render() {\n    return (\n      // <UserProvider>\n        <Application />\n      // </UserProvider>\n    );\n  }\n}\n",
    "const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {firebaseApp} from './components/firebase/firebase';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"
  ],
  "sourceRoot": ""
}
