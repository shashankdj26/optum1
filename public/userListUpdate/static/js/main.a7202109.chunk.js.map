{"version":3,"sources":["logo.svg","components/firebase.js","components/MultiUserAccountCreation.js","components/SingleUserAccountCreation.js","components/MultiUserAccountDeletion.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","window","firebaseInstance","auth","realDB","database","app","asyncForEach","array","callback","a","index","length","addUserToDB","object","userArray","console","log","element","email","toLowerCase","unicode","trim","Id","replace","userData","id","name","profile_image","ref","set","push","err","MultiUserAccountCreation","props","inputRef","React","createRef","batchCount","singleBatchWaitTime","callCounter","processData","data","processFakeCloudCall","setState","inUse","isLoading","selectedFile","swal","icon","title","firstname","lastname","this","getJsonFromExcel","fileReader","FileReader","onload","event","target","result","workbook","XLSX","read","type","SheetNames","forEach","sheet","rowObject","utils","sheet_to_row_object_array","Sheets","readAsBinaryString","state","chunk","size","chunked_arr","i","last","takeAction","preventDefault","excelData","newArray","timer","setTimeout","className","htmlFor","placeholder","accept","onChange","files","disabled","style","pointerEvents","opacity","theme","onClick","e","Component","SingleUserAccountCreation","validateEmail","test","String","onInputChange","value","handleInputChange","onFormSubmit","alert","obj","autoComplete","required","display","MultiUserAccountDeletion","callCloudFuntion","functionName","JSON","stringify","deleteUser","emailArray","user","path","dbref","orderByChild","limitToFirst","once","query","exists","val","Object","keys","key","indexOf","split","includes","delpath","remove","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7202109.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import firebase, { app, database } from \"firebase/app\";\r\n\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/database\";\r\nimport \"firebase/analytics\";\r\nimport \"firebase/storage\";\r\n// import { AppString } from \"./AppString\";\r\n// import * as projectData from \"../../data/Lobby/hotspots\";\r\n// import * as realTimeData from \"../../data/Lobby/realtimeData\";\r\n// import { PointType, PointValues } from \"../../const/fixed/Types\";\r\nimport { object } from \"prop-types\";\r\n\r\nlet firebaseConfig = {\r\n  apiKey: \"AIzaSyCmOLevauXelxq4AkhIcxyeZj5Mjdev-kI\",\r\n  authDomain: \"peter-alexander-f1f90.firebaseapp.com\",\r\n  databaseURL:\r\n    \"https://peter-alexander-f1f90-default-rtdb.asia-southeast1.firebasedatabase.app\",\r\n  projectId: \"peter-alexander-f1f90\",\r\n  storageBucket: \"peter-alexander-f1f90.appspot.com\",\r\n  messagingSenderId: \"785012247671\",\r\n  appId: \"1:785012247671:web:d40d1aa683262b71710a72\",\r\n  measurementId: \"G-WBH5X5XF1H\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nwindow.firebaseInstance = firebase;\r\n\r\n// export const firebaseApp = firebase;\r\n\r\nexport const auth = firebase.auth();\r\n\r\n// export const firestore = firebase.firestore();\r\n\r\nexport const realDB = firebase.database();\r\n\r\n// export const analytics = firebase.analytics();\r\n\r\n// export const storage = firebase.storage();\r\n\r\nexport const regionFunction = firebase.app();\r\n\r\nasync function asyncForEach(array, callback) {\r\n  for (let index = 0; index < array.length; index++) {\r\n    await callback(array[index], index, array);\r\n  }\r\n}\r\n\r\nexport const addUserToDB = async (object, callback) => {\r\n  let userArray = [];\r\n  console.log(object);\r\n  await asyncForEach(object, async (element) => {\r\n    try {\r\n      console.log(element);\r\n      const email = element.email.toLowerCase();\r\n      let unicode = element.unicode.toLowerCase().trim();\r\n\r\n      let Id = email.replace(/[&\\/\\\\#,+$~%.'\":*?<>{}]/g, \"\");\r\n\r\n      let userData = {\r\n        email: email,\r\n        id: Id,\r\n        name: element.name,\r\n        unicode: element.unicode,\r\n        profile_image:\r\n          \"https://cdn2.iconfinder.com/data/icons/ios-7-icons/50/user_male2-512.png\",\r\n      };\r\n\r\n      realDB.ref(`users/${Id}`).set(userData);\r\n      userArray.push(Id);\r\n    } catch (err) {\r\n      console.log(err);\r\n      userArray.push(err);\r\n    }\r\n  });\r\n  console.log(userArray);\r\n  if (callback) {\r\n    callback();\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import {\r\n//   Card,\r\n//   CardHeader,\r\n//   ListGroup,\r\n//   ListGroupItem,\r\n//   Row,\r\n//   Col,\r\n//   Form,\r\n//   FormGroup,\r\n//   FormInput,\r\n//   FormSelect,\r\n//   FormTextarea,\r\n//   Button,\r\n// } from \"shards-react\";\r\nimport XLSX from \"xlsx\";\r\nimport { realDB } from \"./firebase\";\r\nimport swal from \"sweetalert\";\r\nimport \"./style.css\";\r\n\r\nexport default class MultiUserAccountCreation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedFile: null,\r\n      inUse: false,\r\n      isLoading: false,\r\n    };\r\n  }\r\n  inputRef = React.createRef();\r\n  batchCount = 15;\r\n  singleBatchWaitTime = 4000;\r\n  callCounter = 0;\r\n\r\n  asyncForEach = async (array, callback) => {\r\n    for (let index = 0; index < array.length; index++) {\r\n      await callback(array[index], index, array);\r\n    }\r\n  };\r\n\r\n  processData = (data) => {\r\n    // let jsonObject = JSON.stringify(newArray);\r\n    // document.getElementById(\"jsonData\").innerHTML = jsonObject;\r\n    // console.log(\"waiting for resonse now!! request Sent 😎\");\r\n    // let data = JSON.parse(jsonObject)\r\n    // this.callCounter += 1;\r\n    this.processFakeCloudCall(data, () => {\r\n      console.log(this.callCounter);\r\n      this.callCounter -= 1;\r\n      if (this.callCounter === 0) {\r\n        this.setState({\r\n          inUse: false,\r\n          isLoading: false,\r\n          selectedFile: null,\r\n        });\r\n        swal({\r\n          icon: \"success\",\r\n          title: \"All the users has been added to the database.\",\r\n        });\r\n        // console.log(this.inputRef.current);\r\n        // if (this.inputRef.current) {\r\n        //     this.inputRef.current.files = null\r\n        // }\r\n      }\r\n    });\r\n  };\r\n\r\n  processFakeCloudCall = async (object, callback) => {\r\n    let userArray = [];\r\n    console.log(object);\r\n    await this.asyncForEach(object, async (element) => {\r\n      try {\r\n        const email = element.email.toLowerCase();\r\n        // let unicode = element.unicode.toLowerCase().trim();\r\n        let firstname = element.firstname.toLowerCase().trim();\r\n        let lastname = element.lastname.toLowerCase().trim();\r\n        let name = firstname + \" \" + lastname;\r\n        let Id = email.replace(/[&\\/\\\\#,+$~%.'\":*?<>{}]/g, \"\");\r\n\r\n        let userData = {\r\n          email: email,\r\n          id: Id,\r\n          name: name,\r\n          profile_image:\r\n            \"https://cdn2.iconfinder.com/data/icons/ios-7-icons/50/user_male2-512.png\",\r\n        };\r\n\r\n        realDB.ref(`users/${Id}`).set(userData);\r\n        // console.log(userData)\r\n        userArray.push(Id);\r\n      } catch (err) {\r\n        console.log(err);\r\n        userArray.push(err);\r\n      }\r\n    });\r\n    console.log(userArray);\r\n    if (callback) {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  getJsonFromExcel = async (callback) => {\r\n    var fileReader = new FileReader();\r\n    fileReader.onload = function (event) {\r\n      var data = event.target.result;\r\n      var workbook = XLSX.read(data, {\r\n        type: \"binary\",\r\n      });\r\n      workbook.SheetNames.forEach((sheet) => {\r\n        let rowObject = XLSX.utils.sheet_to_row_object_array(\r\n          workbook.Sheets[sheet]\r\n        );\r\n        callback(rowObject);\r\n      });\r\n    };\r\n    fileReader.readAsBinaryString(this.state.selectedFile);\r\n  };\r\n\r\n  chunk = (array, size) => {\r\n    const chunked_arr = [];\r\n    for (let i = 0; i < array.length; i++) {\r\n      const last = chunked_arr[chunked_arr.length - 1];\r\n      if (!last || last.length === size) {\r\n        chunked_arr.push([array[i]]);\r\n      } else {\r\n        last.push(array[i]);\r\n      }\r\n    }\r\n    return chunked_arr;\r\n  };\r\n\r\n  takeAction = (event) => {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    if (this.state.selectedFile && !this.state.inUse) {\r\n      this.setState({ inUse: true, isLoading: true });\r\n      this.getJsonFromExcel((excelData) => {\r\n        this.callCounter = 0;\r\n        console.log(excelData);\r\n        if (excelData.length < this.batchCount) {\r\n          this.callCounter += 1;\r\n          this.processData(excelData);\r\n        } else {\r\n          const newArray = this.chunk(excelData, this.batchCount);\r\n          this.callCounter = 0;\r\n          var timer = this.singleBatchWaitTime;\r\n          newArray.forEach((array) => {\r\n            this.callCounter += 1;\r\n            console.log(\r\n              array.length,\r\n              (timer * this.callCounter) / 1000,\r\n              this.callCounter,\r\n              timer\r\n            );\r\n            setTimeout(() => {\r\n              // console.log(newArray.indexOf(array), \"--calling--\");\r\n              this.processData(array);\r\n            }, timer * this.callCounter);\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      console.log(\"wait for another task to get complete!!\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"card\">\r\n          <h2>Create Users From Excel</h2>\r\n          <div className=\"input-body ml\">\r\n            <label htmlFor=\"newUserExcel\">Excel File: </label>\r\n            <input\r\n              type=\"file\"\r\n              id=\"newUserExcel\"\r\n              placeholder=\"Name\"\r\n              accept=\".xls,.xlsx\"\r\n              onChange={(event) => {\r\n                this.setState({ selectedFile: event.target.files[0] });\r\n              }}\r\n              ref={this.inputRef}\r\n            />\r\n          </div>\r\n          <button\r\n            disabled={!this.state.selectedFile}\r\n            style={\r\n              !this.state.selectedFile\r\n                ? { pointerEvents: \"none\", opacity: \"0.4\" }\r\n                : {}\r\n            }\r\n            theme=\"accent\"\r\n            onClick={(e) => this.takeAction(e)}\r\n          >\r\n            Create Users\r\n          </button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// export default UserAccountCreation;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport swal from \"sweetalert\";\r\n\r\nimport { addUserToDB } from \"./firebase\";\r\n\r\nexport default class SingleUserAccountCreation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: null,\r\n      email: null,\r\n      unicode: \"penny2021\",\r\n    };\r\n  }\r\n\r\n  validateEmail = (email) => {\r\n    const re =\r\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  };\r\n\r\n  onInputChange = (event) => {\r\n    event.preventDefault();\r\n    let value = event.target.value;\r\n    this.setState({ [event.target.name]: value });\r\n  };\r\n\r\n  handleInputChange = async (event, name) => {\r\n    var value = this.state[name];\r\n    if (value) value = false;\r\n    else value = true;\r\n\r\n    this.setState({ [name]: value });\r\n\r\n    console.log(value);\r\n\r\n    // Make slider instant change\r\n    // setSingleSignIn(value);\r\n  };\r\n\r\n  onFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    var name = this.state.name;\r\n    var email = this.state.email;\r\n    var unicode = this.state.unicode;\r\n\r\n    if (\r\n      !name ||\r\n      name.length === 0 ||\r\n      !email ||\r\n      email.length === 0 ||\r\n      !unicode ||\r\n      unicode.length === 0\r\n    ) {\r\n      window.alert(\"enter valid data\");\r\n      return;\r\n    }\r\n\r\n    if (!this.validateEmail(email)) {\r\n      window.alert(\"enter valid email\");\r\n      return;\r\n    }\r\n\r\n    var obj = [\r\n      {\r\n        name: name,\r\n        email: email.toLowerCase(),\r\n        unicode: unicode.toLowerCase().trim(),\r\n      },\r\n    ];\r\n    console.log(obj);\r\n    addUserToDB(obj, () => {\r\n      console.log(\"All Work is done!!!! 😎😎😎\");\r\n      alert(\"User added\");\r\n      // swal({\r\n      //   icon: \"success\",\r\n      //   title: \"User has been added to the database.\",\r\n      // });\r\n      this.setState({\r\n        name: \"\",\r\n        email: \"\",\r\n        unicode: \"penny2021\",\r\n      });\r\n      // window.location.reload();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"card\">\r\n          <h2>Create Single User</h2>\r\n          <div className=\"input-body \">\r\n            <label htmlFor=\"newUserEmail\">Email: </label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"newUserEmail\"\r\n              name=\"email\"\r\n              placeholder=\"Email Address\"\r\n              value={this.state.email}\r\n              onChange={this.onInputChange}\r\n              autoComplete=\"email\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"input-body \">\r\n            <label htmlFor=\"newUserName\">Name: </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"newUserName\"\r\n              name=\"name\"\r\n              placeholder=\"Name\"\r\n              value={this.state.name}\r\n              onChange={this.onInputChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"input-body \" style={{ display: \"none\" }}>\r\n            <label htmlFor=\"newUserCode\">UniCode: </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"newUsercode\"\r\n              name=\"unicode\"\r\n              disabled={true}\r\n              placeholder=\"penny2021\"\r\n              value={this.state.unicode}\r\n              onChange={this.onInputChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <button theme=\"accent\" onClick={(e) => this.onFormSubmit(e)}>\r\n            Create User\r\n          </button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// export default UserAccountCreation;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport XLSX from \"xlsx\";\r\nimport { realDB, regionFunction } from \"./firebase\";\r\nimport swal from \"sweetalert\";\r\n\r\nexport default class MultiUserAccountDeletion extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedFile: null,\r\n      inUse: false,\r\n      isLoading: false,\r\n    };\r\n  }\r\n  inputRef = React.createRef();\r\n  batchCount = 15;\r\n  singleBatchWaitTime = 4000;\r\n  callCounter = 0;\r\n\r\n  asyncForEach = async (array, callback) => {\r\n    for (let index = 0; index < array.length; index++) {\r\n      await callback(array[index], index, array);\r\n    }\r\n  };\r\n\r\n  callCloudFuntion = (newArray, functionName) => {\r\n    let jsonObject = JSON.stringify(newArray);\r\n    console.log(\"waiting for resonse now!! request Sent 😎\");\r\n    this.callCounter += 1;\r\n    // const check = regionFunction.httpsCallable(functionName);\r\n    // check(jsonObject).then(function (result) {\r\n    //     console.log(result.data);\r\n    //     // inUse = false;\r\n    //     this.callCounter -= 1;\r\n    //     if (this.callCounter == 0) {\r\n    //         this.setState({\r\n    //             inUse: false,\r\n    //             isLoading: false,\r\n    //             selectedFile: null,\r\n    //         });\r\n    //         console.log(\"All Work is done!!!! 😎😎😎\");\r\n    //     }\r\n    // });\r\n  };\r\n\r\n  deleteUser = async (userArray) => {\r\n    try {\r\n      // var emailArray = ['sophosstall@admin.com', 'helpdesk@event.com', 'ved.tiwari@vccircle.com', 'harshit@digitaljalebi.com', 'shubham@dj.com', 'vccedgestall@admin.com', 'antzy@dj.com', 'anant@dj.com', 'shubham@digitaljalebi.com']\r\n      var emailArray = [];\r\n      userArray.forEach((user) => {\r\n        emailArray.push(user.email);\r\n      });\r\n\r\n      let path = \"/users\";\r\n      var dbref = realDB.ref(path).orderByChild(\"email\").limitToFirst(1000);\r\n      const query = await dbref.once(\"value\");\r\n      if (query.exists()) {\r\n        let data = query.val();\r\n        Object.keys(data).forEach((key) => {\r\n          const email = data[key].email;\r\n          if (emailArray.indexOf(email) === -1) {\r\n            if (!email.split(\"@\")[0].toLowerCase().includes(\"guest\")) {\r\n              let delpath = path + \"/\" + key;\r\n              realDB.ref(delpath).remove();\r\n              console.log(`deleting... ${email}`);\r\n            } else {\r\n              console.log(`leaving... ${email} guest`);\r\n            }\r\n          } else {\r\n            console.log(`leaving... ${email} excel`);\r\n          }\r\n        });\r\n        console.log(\"------Done----------\");\r\n        this.setState({\r\n          inUse: false,\r\n          isLoading: false,\r\n          selectedFile: null,\r\n        });\r\n        swal({\r\n          icon: \"success\",\r\n          title: \"database updated.\",\r\n        });\r\n      } else {\r\n        window.alert(\"noUserFound\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  processData = (data) => {\r\n    // let jsonObject = JSON.stringify(newArray);\r\n    // document.getElementById(\"jsonData\").innerHTML = jsonObject;\r\n    // console.log(\"waiting for resonse now!! request Sent 😎\");\r\n    // let data = JSON.parse(jsonObject)\r\n    // this.callCounter += 1;\r\n    this.processFakeCloudCall(data, () => {\r\n      console.log(this.callCounter);\r\n      this.callCounter -= 1;\r\n      if (this.callCounter === 0) {\r\n        this.setState({\r\n          inUse: false,\r\n          isLoading: false,\r\n          selectedFile: null,\r\n        });\r\n        swal({\r\n          icon: \"success\",\r\n          title: \"All the users has been added to the database.\",\r\n        });\r\n        // console.log(this.inputRef.current);\r\n        // if (this.inputRef.current) {\r\n        //     this.inputRef.current.files = null\r\n        // }\r\n      }\r\n    });\r\n    swal({\r\n      icon: \"success\",\r\n      title: \"database updated.\",\r\n    });\r\n  };\r\n\r\n  processFakeCloudCall = async (object, callback) => {\r\n    let userArray = [];\r\n    console.log(object);\r\n    await this.asyncForEach(object, async (element) => {\r\n      try {\r\n        const email = element.email.toLowerCase();\r\n        // let unicode = element.unicode.toLowerCase().trim();\r\n        let firstname = element.firstname.toLowerCase().trim();\r\n        let lastname = element.lastname.toLowerCase().trim();\r\n        let name = firstname + \" \" + lastname;\r\n        let Id = email.replace(/[&\\/\\\\#,+$~%.'\":*?<>{}]/g, \"\");\r\n\r\n        let userData = {\r\n          // unicode: unicode,\r\n          email: email,\r\n          id: Id,\r\n          name: name,\r\n          profile_image:\r\n            \"https://cdn2.iconfinder.com/data/icons/ios-7-icons/50/user_male2-512.png\",\r\n        };\r\n\r\n        realDB.ref(`users/${Id}`).set(userData);\r\n        // console.log(userData)\r\n        userArray.push(Id);\r\n      } catch (err) {\r\n        console.log(err);\r\n        userArray.push(err);\r\n      }\r\n    });\r\n    console.log(userArray);\r\n    if (callback) {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  getJsonFromExcel = async (callback) => {\r\n    var fileReader = new FileReader();\r\n    fileReader.onload = function (event) {\r\n      var data = event.target.result;\r\n      var workbook = XLSX.read(data, {\r\n        type: \"binary\",\r\n      });\r\n      workbook.SheetNames.forEach((sheet) => {\r\n        let rowObject = XLSX.utils.sheet_to_row_object_array(\r\n          workbook.Sheets[sheet]\r\n        );\r\n        callback(rowObject);\r\n      });\r\n    };\r\n    fileReader.readAsBinaryString(this.state.selectedFile);\r\n  };\r\n\r\n  chunk = (array, size) => {\r\n    const chunked_arr = [];\r\n    for (let i = 0; i < array.length; i++) {\r\n      const last = chunked_arr[chunked_arr.length - 1];\r\n      if (!last || last.length === size) {\r\n        chunked_arr.push([array[i]]);\r\n      } else {\r\n        last.push(array[i]);\r\n      }\r\n    }\r\n    return chunked_arr;\r\n  };\r\n\r\n  takeAction = (event) => {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    if (this.state.selectedFile && !this.state.inUse) {\r\n      this.setState({ inUse: true, isLoading: true });\r\n      this.getJsonFromExcel((excelData) => {\r\n        this.deleteUser(excelData);\r\n\r\n        /*this.callCounter = 0;\r\n\r\n                if (excelData.length < this.batchCount) {\r\n                    this.callCounter += 1;\r\n                    // this.processData(excelData);\r\n                    this.callCloudFuntion(excelData, 'deleteAlluser');\r\n                } else {\r\n                    const newArray = this.chunk(excelData, this.batchCount);\r\n                    this.callCounter = 0;\r\n                    var timer = this.singleBatchWaitTime;\r\n                    newArray.forEach(array => {\r\n                        this.callCounter += 1;\r\n                        console.log(array.length, timer * (this.callCounter) / 1000, this.callCounter, timer);\r\n                        setTimeout(() => {\r\n                            // console.log(newArray.indexOf(array), \"--calling--\");\r\n                            // this.processData(array);\r\n                            this.callCloudFuntion(excelData, 'deleteAlluser');\r\n                        }, timer * (this.callCounter));\r\n                    });\r\n                }*/\r\n      });\r\n    } else {\r\n      console.log(\"wait for another task to get complete!!\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"card\">\r\n          <h2>Delete All Users Except In Excel</h2>\r\n          <div className=\"input-body ml\">\r\n            <label htmlFor=\"newUserExcel\">Excel File: </label>\r\n            <input\r\n              type=\"file\"\r\n              id=\"newUserExcel\"\r\n              placeholder=\"Name\"\r\n              accept=\".xls,.xlsx\"\r\n              onChange={(event) => {\r\n                this.setState({ selectedFile: event.target.files[0] });\r\n              }}\r\n              ref={this.inputRef}\r\n            />\r\n          </div>\r\n          <button\r\n            disabled={!this.state.selectedFile}\r\n            style={\r\n              !this.state.selectedFile\r\n                ? { pointerEvents: \"none\", opacity: \"0.4\" }\r\n                : {}\r\n            }\r\n            theme=\"accent\"\r\n            onClick={(e) => this.takeAction(e)}\r\n          >\r\n            Update Users\r\n          </button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// export default UserAccountCreation;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport MultiUserAccountCreation from \"./components/MultiUserAccountCreation\";\nimport SingleUserAccountCreation from \"./components/SingleUserAccountCreation\";\nimport MultiUserAccountDeletion from \"./components/MultiUserAccountDeletion\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MultiUserAccountCreation />\n      <SingleUserAccountCreation />\n      <MultiUserAccountDeletion />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}