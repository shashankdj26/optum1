{"version":3,"sources":["firebase.js","component/Header.jsx","component/Note.jsx","component/Home.jsx","component/LoginForm.jsx","component/App.jsx","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Header","React","Component","constructor","props","super","this","state","user","componentDidMount","authListener","auth","onAuthStateChanged","setState","logout","signOut","window","location","href","render","src","alt","onClick","Note","isDisabledA","desA","isDisabledR","desR","r","a","className","title","time","toString","content","onDelete","id","disabled","onUpdateR","onUpdateA","date","moment","utcOffset","format","Home","NewQuestionsData","ApprovedQuestionsData","RejectedQuestionsData","useState","notes","setNotes","deleteNote","newNotes","filter","doc","index","firestore","collection","delete","updateStatusA","update","Date","time2","status","updateStatusR","useEffect","orderBy","where","onSnapshot","snapshot","docs","map","data","note","key","App","get","then","adminUID","includes","uid","catch","error","console","log","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e2552242.chunk.js","sourcesContent":["import  firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\n// Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyBjNxBYxeK4kRO3Nw_bM8mHFhWof3vowy4\",\r\n    authDomain: \"djistest-f1ae1.firebaseapp.com\",\r\n    databaseURL: \"https://djistest-f1ae1.firebaseio.com\",\r\n    projectId: \"djistest-f1ae1\",\r\n    storageBucket: \"djistest-f1ae1.appspot.com\",\r\n    messagingSenderId: \"978964816786\",\r\n    appId: \"1:978964816786:web:fb5ca7022d87b20143d74b\",\r\n    measurementId: \"G-X7TC7B5W4E\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export default firebase;\r\n","import React from \"react\";\r\nimport firebase from \"../firebase\";\r\n\r\n\r\nclass Header extends React.Component {\r\n\r\n  constructor(props)\r\n  {\r\n     super(props)\r\n     this.state={\r\n       user:{}\r\n     }\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    this.authListener();\r\n  }\r\n\r\n  authListener()\r\n  {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n\r\n      if(user)\r\n      {\r\n        this.setState({user})\r\n      } else\r\n      {\r\n        this.setState({user: null})\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  logout()\r\n  {\r\n    firebase.auth().signOut();\r\n     window.location.href = \"/dashboard/index.html\";\r\n  }\r\n\r\n    render() {\r\n        return (\r\n          <header>\r\n          <div>\r\n          <img src=\"djvelogo.png\" alt=\"DJ Logo\"></img> <p><a href=\"/polldashboard/index.html\">Poll Dashboard</a></p> <p><a href=\"/qnadashboard/index.html\">QnA Dashboard</a></p> <button onClick={this.logout}>Logout</button>\r\n          </div>\r\n          </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Note(props) {\r\n\r\n  function handleClick() {\r\n    props.onDelete(props.id);\r\n  }\r\n\r\n  function handleClickUpdateA() {\r\n    props.onUpdateA(props.id);\r\n  }\r\n\r\n  function handleClickUpdateR() {\r\n    props.onUpdateR(props.id);\r\n  }\r\n\r\n  var isDisabledA = props.desA === '1' ? true : false;\r\n  var isDisabledR = props.desR === '2' ? true : false;\r\n  var r = props.desR === '2' ? 'buttonR disabled' : 'buttonR';\r\n  var a = props.desA === '1' ? 'buttonA disabled' : 'buttonA';\r\n\r\n  return (\r\n\r\n    <div className=\"note\">\r\n      <h1>{props.title}<span className=\"time\"> {(props.time).toString()}</span></h1>\r\n      <p>{props.content}</p>\r\n      <button className=\"buttonD\" onClick={handleClick}>Delete</button>\r\n      <button className={r} disabled={isDisabledR} onClick={handleClickUpdateR}>Reject</button>\r\n      <button className={a} disabled={isDisabledA} onClick={handleClickUpdateA}> Accept</button>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Note;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Note from \"./Note\";\r\nimport moment from 'moment';\r\nimport firebase from \"../firebase\";\r\n\r\nvar date = moment().utcOffset('+05:30').format('hh:mm A DD-MM-YYYY');\r\n\r\nclass Home extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n          <div>\r\n          <NewQuestionsData />\r\n          <ApprovedQuestionsData />\r\n          <RejectedQuestionsData />\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction useNotes()\r\n{\r\n  const [notes, setNotes] = useState([])\r\n\r\n  useEffect(() => {\r\n    firebase\r\n    .firestore()\r\n    .collection('notes')\r\n    .onSnapshot((snapshot) => {\r\n      const newNotes = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }))\r\n      setNotes(newNotes)\r\n    })\r\n  },\r\n  [])\r\n  return notes\r\n}\r\n\r\nconst ApprovedQuestionsData = () =>\r\n{\r\n\r\n  const [notes, setNotes] = useState([])\r\n\r\n  useEffect(() => {\r\n    firebase\r\n    .firestore()\r\n    .collection('qna2d').orderBy('time','desc').where('status', '==', '1')\r\n    .onSnapshot((snapshot) => {\r\n      const newNotes = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }))\r\n      setNotes(newNotes)\r\n    })\r\n  },[])\r\n\r\n  function deleteNote(id)\r\n  {\r\n    setNotes(newNotes => {\r\n      return  newNotes.filter((doc, index) => {\r\n        if(index === id)\r\n        {\r\n          firebase.firestore().collection('qna2d').doc(doc.id).delete();\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  function updateStatusA(id)\r\n  {\r\n    var date = moment().utcOffset('+05:30').format('hh:mm A DD-MM-YYYY');\r\n    setNotes(newNotes => {\r\n      return  newNotes.filter((doc, index) => {\r\n        if(index === id)\r\n        {\r\n          firebase.firestore().collection('qna2d').doc(doc.id).update({\r\n            time: new Date(),\r\n            time2: date,\r\n            status: \"1\"\r\n          });\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  function updateStatusR(id)\r\n  {\r\n    setNotes(newNotes => {\r\n      return  newNotes.filter((doc, index) => {\r\n        if(index === id)\r\n        {\r\n          firebase.firestore().collection('qna2d').doc(doc.id).update({\r\n            time: new Date(),\r\n            time2: date,\r\n            status: \"2\"\r\n          });\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <div id=\"QuestionBox1\">\r\n      <h3 id=\"QuestionHeaderA\">Accepted Questions </h3>\r\n      <h3 id=\"ExtraHeader\">.</h3>\r\n      {notes.map((note, index) => {\r\n        return (\r\n          <Note\r\n            key={index}\r\n            id={index}\r\n            title={note.title}\r\n            content={note.content}\r\n            onDelete={deleteNote}\r\n            time={(note.time2)}\r\n            onUpdateA={updateStatusA}\r\n            onUpdateR={updateStatusR}\r\n            desA={note.status}\r\n          />\r\n        );\r\n      })}\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nconst NewQuestionsData = () =>\r\n{\r\n\r\n  const [notes, setNotes] = useState([])\r\n\r\n  useEffect(() => {\r\n    firebase\r\n    .firestore()\r\n    .collection('qna2d').orderBy('time','desc').where('status', '==', '0')\r\n    .onSnapshot((snapshot) => {\r\n      const newNotes = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }))\r\n      setNotes(newNotes)\r\n    })\r\n  },[])\r\n\r\n  function deleteNote(id)\r\n  {\r\n\r\n    setNotes(newNotes => {\r\n      return  newNotes.filter((doc, index) => {\r\n        if(index === id)\r\n        {\r\n          firebase.firestore().collection('qna2d').doc(doc.id).delete();\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  function updateStatusA(id)\r\n  {\r\n    var date = moment().utcOffset('+05:30').format('hh:mm A DD-MM-YYYY');\r\n\r\n    setNotes(newNotes => {\r\n      return  newNotes.filter((doc, index) => {\r\n        if(index === id)\r\n        {\r\n          firebase.firestore().collection('qna2d').doc(doc.id).update({\r\n            time: new Date(),\r\n            time2: date,\r\n            status: \"1\"\r\n          });\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  function updateStatusR(id)\r\n  {\r\n    setNotes(newNotes => {\r\n      return  newNotes.filter((doc, index) => {\r\n        if(index === id)\r\n        {\r\n          firebase.firestore().collection('qna2d').doc(doc.id).update({\r\n            time: new Date(),\r\n            time2: date,\r\n            status: \"2\"\r\n          });\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"QuestionBox1\">\r\n      <h3 id=\"QuestionHeaderN\"> New Questions </h3>\r\n      <h3 id=\"ExtraHeader\">.</h3>\r\n      {notes.map((note, index) => {\r\n        return (\r\n          <Note\r\n            key={index}\r\n            id={index}\r\n            title={note.title}\r\n            content={note.content}\r\n            onDelete={deleteNote}\r\n            time={(note.time2)}\r\n            onUpdateA={updateStatusA}\r\n            onUpdateR={updateStatusR}\r\n          />\r\n        );\r\n      })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst RejectedQuestionsData = () =>\r\n{\r\n\r\n  const [notes, setNotes] = useState([])\r\n\r\n  useEffect(() => {\r\n    firebase\r\n    .firestore()\r\n    .collection('qna2d').orderBy('time','desc').where('status', '==', '2')\r\n    .onSnapshot((snapshot) => {\r\n      const newNotes = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }))\r\n      setNotes(newNotes)\r\n    })\r\n  },[])\r\n\r\n  function deleteNote(id)\r\n  {\r\n    setNotes(newNotes => {\r\n      return  newNotes.filter((doc, index) => {\r\n        if(index === id)\r\n        {\r\n          firebase.firestore().collection('qna2d').doc(doc.id).delete();\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  function updateStatusA(id)\r\n  {\r\n    var date = moment().utcOffset('+05:30').format('hh:mm A DD-MM-YYYY');\r\n\r\n    setNotes(newNotes => {\r\n      return  newNotes.filter((doc, index) => {\r\n        if(index === id)\r\n        {\r\n          firebase.firestore().collection('qna2d').doc(doc.id).update({\r\n            time: new Date(),\r\n            time2: date,\r\n            status: \"1\"\r\n          });\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  function updateStatusR(id)\r\n  {\r\n\r\n    setNotes(newNotes => {\r\n      return  newNotes.filter((doc, index) => {\r\n        if(index === id)\r\n        {\r\n          firebase.firestore().collection('qna2d').doc(doc.id).update({\r\n            time: new Date(),\r\n            time2: date,\r\n            status: \"2\"\r\n          });\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"QuestionBox1\">\r\n      <h3 id=\"QuestionHeaderR\">Rejected  Questions </h3>\r\n      <h3 id=\"ExtraHeader\">.</h3>\r\n      {notes.map((note, index) => {\r\n        return (\r\n          <Note\r\n            key={index}\r\n            id={index}\r\n            title={note.title}\r\n            content={note.content}\r\n            onDelete={deleteNote}\r\n            time={(note.time2)}\r\n            onUpdateA={updateStatusA}\r\n            onUpdateR={updateStatusR}\r\n            desR={note.status}\r\n          />\r\n        );\r\n      })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport firebase from \"../firebase\";\r\n\r\n\r\nclass LoginForm extends React.Component {\r\n\r\nconstructor(props)\r\n{\r\n   super(props)\r\n   this.login = this.login.bind(this);\r\n   this.handleChange = this.handleChange.bind(this);\r\n   this.state={\r\n     email:\"\",\r\n     password: \"\"\r\n   }\r\n}\r\n\r\nlogin(e)\r\n{\r\n\r\n  e.preventDefault();\r\n  firebase.auth().signInWithEmailAndPassword(this.state.email,this.state.password).then((u) => {\r\n  }).catch((err)=>{\r\n  })\r\n}\r\n\r\nhandleChange(e){\r\n  this.setState({\r\n    [e.target.name] : e.target.value\r\n})\r\n}\r\n\r\n    render() {\r\n        return (\r\n          <div>\r\n          <form>\r\n          <p><label>Email address</label></p>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              placeholder=\"Enter your email\"\r\n              onChange={this.handleChange}\r\n              value={this.state.email}\r\n            />\r\n            <p><label>Password</label></p>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"Enter your password\"\r\n              onChange={this.handleChange}\r\n              value={this.state.password}\r\n            />\r\n            <button onClick={this.login} className=\"buttons\">Login</button>\r\n          </form>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Home from \"./Home\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport firebase from \"../firebase\";\r\n\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props)\r\n  {\r\n     super(props)\r\n     this.state={\r\n       user:{}\r\n     }\r\n  }\r\n\r\n/*useAdminCheck(userUid)\r\n{\r\n  firebase.firestore().collection('Admin').doc('AdminUsers').get().then(doc =>{\r\n    const docData = doc.data();\r\n    var adminArray = docData.adminUID;\r\n\r\n      if(!adminArray.includes(userUid)){\r\n        this.setState({user: null})\r\n      }else\r\n      {\r\n        this.setState({user})\r\n      }\r\n      }).catch(function(error){\r\n        console.log(error);\r\n      });\r\n  }*/\r\n\r\n\r\n\r\n  componentDidMount()\r\n  {\r\n    this.authListener();\r\n  }\r\n\r\n  authListener()\r\n  {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n\r\n      if(user)\r\n      {\r\n        firebase.firestore().collection('Admin').doc('AdminUsers').get().then(doc =>{\r\n          const docData = doc.data();\r\n          var adminArray = docData.adminUID;\r\n\r\n            if(!adminArray.includes(user.uid)){\r\n              this.setState({user: null})\r\n\r\n            }else\r\n            {\r\n              this.setState({user})\r\n            }\r\n            }).catch(function(error){\r\n              console.log(error);\r\n            });\r\n      } else\r\n      {\r\n        this.setState({user: null})\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n          <div>\r\n            <Header />\r\n            {this.state.user ? (<Home />) : window.location.href = \"/dashboard/index.html\"};\r\n          </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./component/App\"\n\nReactDOM.render(<App />,document.getElementById(\"root\"));\n"],"sourceRoot":""}